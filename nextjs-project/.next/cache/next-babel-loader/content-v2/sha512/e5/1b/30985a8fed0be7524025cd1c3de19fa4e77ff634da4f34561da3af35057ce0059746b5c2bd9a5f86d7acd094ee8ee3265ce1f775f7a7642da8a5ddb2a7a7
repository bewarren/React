{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjaminwarren/Documents/Github/React/nextjs-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://tse1.mm.bing.net/th?id=OIP.tAD6Vq3bFF5jhchW-fVROgE3DI&pid=Api\",\n    title: \"First Meetup\",\n    address: \"street 1 \",\n    description: \"Lorem ipsum\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://udemyCourse:udemyCourse@cluster0.k1rxm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupID = context.params.meetupId;\n  console.log(meetupID);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://tse1.mm.bing.net/th?id=OIP.tAD6Vq3bFF5jhchW-fVROgE3DI&pid=Api\",\n        id: meetupID,\n        title: \"First Meetup\",\n        address: \"street 1 \",\n        description: \"Lorem ipsum\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/benjaminwarren/Documents/Github/React/nextjs-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupID","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,uEADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,8GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACtC;AAEA,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,uEAFQ;AAGVC,QAAAA,EAAE,EAAEN,QAHM;AAIVO,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,WALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return (\n    <MeetupDetail\n      image=\"https://tse1.mm.bing.net/th?id=OIP.tAD6Vq3bFF5jhchW-fVROgE3DI&pid=Api\"\n      title=\"First Meetup\"\n      address=\"street 1 \"\n      description=\"Lorem ipsum\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://udemyCourse:udemyCourse@cluster0.k1rxm.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const meetupID = context.params.meetupId;\n  console.log(meetupID);\n\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://tse1.mm.bing.net/th?id=OIP.tAD6Vq3bFF5jhchW-fVROgE3DI&pid=Api\",\n        id: meetupID,\n        title: \"First Meetup\",\n        address: \"street 1 \",\n        description: \"Lorem ipsum\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}